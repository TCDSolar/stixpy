[tox]
min_version = 4.0
requires =
    tox-pypi-filter>=0.14
envlist =
    py{39,310,311,312}
    build_docs
    codestyle
isolated_build = true


[testenv]
# The following option combined with the use of the tox-pypi-filter above allows
# project-wide pinning of dependencies, e.g. if new versions of pytest do not
# work correctly with pytest-astropy plugins. Most of the time the pinnings file
# should be empty.
#pypi_filter_requirements = https://raw.githubusercontent.com/sunpy/package-template/master/sunpy_version_pins.txt

# Run the tests in a temporary directory to make sure that we don't import
# the package from the source tree
changedir = .tmp/{envname}
# Pass through the following environment variables which may be needed for the CI
passenv = HOME, WINDIR, LC_ALL, LC_CTYPE, CC, CI, TRAVIS


# tox environments are constructed with so-called 'factors' (or terms)
# separated by hyphens, e.g. test-devdeps-cov. Lines below starting with factor:
# will only take effect if that factor is included in the environment name. To
# see a list of example environments that can be run, along with a description,
# run:
#
#     tox -l -v
#
description =
    run tests

deps =
# The following indicates which extras_require from setup.cfg will be installed
extras =
    tests
commands =
    pytest --remote-data=any --pyargs stixpy {toxinidir}/docs --cov stixpy --cov-config={toxinidir}/.coveragerc {posargs}


[testenv:build_docs]
changedir = docs
description = invoke sphinx-build to build the HTML docs
extras = docs
commands =
    sphinx-build -W -b html . _build/html {posargs}


[testenv:codestyle]
skip_install = true
description = Run all style and file checks with pre-commit
deps =
    pre-commit
commands =
    pre-commit install-hooks
    pre-commit run --all-files
