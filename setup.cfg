[metadata]
name = stixpy
author = STIX Team
author_email = shane.maloney@dias.ie
license = BSD 3-Clause
license_file = LICENSE.rst
url = https://github.com/samaloney/stixpy
description = Analysis software for Solar Orbiter Spectromter Telescope for Imaging X-rays (STIX)
long_description = file: README.rst
long_description_content_type = text/x-rst
platform = any
keywords = solar physics, solar, sun, x-rays
classifiers =
  Development Status :: 3 - Alpha
  Intended Audience :: Science/Research
  License :: OSI Approved :: BSD License
  Natural Language :: English
  Operating System :: OS Independent
  Programming Language :: Python
  Programming Language :: Python :: 3
  Programming Language :: Python :: 3.9
  Programming Language :: Python :: 3.10
  Programming Language :: Python :: 3.11
  Topic :: Scientific/Engineering :: Physics

[options]
zip_safe = False
packages = find:
python_requires = >=3.9
include_package_data = True
setup_requires = setuptools_scm
install_requires =
    sunpy[net,timeseries]>=3.1
    reproject
    astroquery
    intervaltree
    roentgen
    matplotlib
    xrayvisim @ git+https://github.com/TCDSolar/xrayvision.git
[options.extras_require]
test =
    pytest
    pytest-astropy
    pytest-cov
docs =
    sphinx
    sphinx-automodapi
    towncrier
    pydata-sphinx-theme
    sphinx-design
    sphinx_changelog

[options.package_data]
stixpy = data/*

[tool:pytest]
testpaths = "stixpy" "docs"
norecursedirs = _build
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst
remote_data_strict = True
filterwarnings =
  ignore:defusedxml.lxml is no longer supported:DeprecationWarning
  ignore:Matplotlib is currently using agg:UserWarning

[coverage:run]
omit =
  stixpy/_sunpy_init*
  stixpy/conftest.py
  stixpy/*setup_package*
  stixpy/tests/*
  stixpy/*/tests/*
  stixpy/extern/*
  stixpy/version*
  */stixpy/_sunpy_init*
  */stixpy/conftest.py
  */stixpy/*setup_package*
  */stixpy/tests/*
  */stixpy/*/tests/*
  */stixpy/extern/*
  */stixpy/version*

[coverage:report]
exclude_lines =
  # Have to re-enable the standard pragma
  pragma: no cover
  # Don't complain about packages we have installed
  except ImportError
  # Don't complain if tests don't hit assertions
  raise AssertionError
  raise NotImplementedError
  # Don't complain about script hooks
  def main\(.*\):
  # Ignore branches that don't pertain to this version of Python
  pragma: py{ignore_python_version}
  # Don't complain about IPython completion helper
  def _ipython_key_completions_
